% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_DA.R
\name{Interpret_SOFR}
\alias{Interpret_SOFR}
\title{Interpretation of Scalar-on-Function Regression Models}
\usage{
Interpret_SOFR(
  beta.post,
  Alpha.post = NULL,
  intercept.post,
  sigma2.post,
  y,
  X,
  z = NULL,
  t.grid,
  plot_all_locally_constant = FALSE,
  K = 20,
  eps_level = 0.1
)
}
\arguments{
\item{beta.post}{Posterior draws of the beta parameter from the Bayesian SOFR model.}

\item{Alpha.post}{Posterior draws of the Alpha parameter from the Bayesian SOFR model. Can be NULL if there are no scalar covariates.}

\item{intercept.post}{Posterior draws of the intercept from the Bayesian SOFR model.}

\item{sigma2.post}{Posterior draws of the sigma-squared parameter from the Bayesian SOFR model.}

\item{y}{Vector of observations for the dependent variable.}

\item{X}{Matrix of functional covariate observations.}

\item{z}{Matrix of scalar covariate observations. Can be NULL.}

\item{t.grid}{A numeric vector of the discrete points on which the functions X are observed.}

\item{plot_all_locally_constant}{Logical. If TRUE, all locally constant estimates will be plotted.}

\item{K}{Number of partitions for the aggregated trajectories. Defaults to 20.}

\item{eps_level}{A numeric value for selecting an acceptable family. It determines the threshold for predictive performance of models under the Bayesian SOFR model. Defaults to 0.1.}
}
\value{
A list containing:
\itemize{
\item {simplest_acc_family: A list of vectors representing the simplest member in the acceptable family for each functional regression coefficient.}
\item {locally_constant: A list of matrices representing all of the locally constant estimates in the solution path of the fused lasso problem.}
\item {empirical_MSE: A list of vectors containing the empirical MSE of all of the locally constant models in the fused lasso solution path.}
\item {predictive_MSE: A list of matrices representing the predictive MSE of all of the locally constant models in the fused lasso solution path.}
}
}
\description{
This function extracts locally constant point estimates from a given Bayesian scalar-on-function regression (SOFR) model.
It does not have to be specific to the BASOFR approach. The output includes plots and a list of results.
}
\examples{
\dontrun{
# simulate the data for BASOFR
data = simulate_SOFR(n = 1500, p = 3, SNR = 5, num_z_continuous = 5, num_z_dummy = 2,
beta_types = c('spiky','smooth','stepwise'), domain_X = c(0, 1),
              max_obs = 105,
              subject_specific_domain = TRUE)

# Scale the continuous z-variables to have std 1 and mean 0, and create the z-variables matrix
z = cbind(scale(data$Z_continuous), data$Z_dummy)

# Fit the BASOFR model
BASOFR_fit <- fitBASOFR(y=data$y, X=data$X, t.grid = data$t.grid,
                        z_continuous = data$Z_continuous, z_dummy = data$Z_dummy,
                        S = 1000, burnin = 100)

plot_BASOFR_fit(BASOFR_fit)

# Decision Analysis
BayesSOFR <- BASOFR_fit # it does not have to be a BASOFR model

# Extract more interpretable locally constant estimates from the Bayesian SOFR model:
SOFR_Interpret <- Interpret_SOFR(beta.post = beta.post, Alpha.post = Alpha.post, intercept.post = intercept.post, sigma2.post = sigma.2.post,
               y = data$y, X = data$X, z=z, t.grid=data$t.grid)

names(SOFR_Interpret)
}
}
